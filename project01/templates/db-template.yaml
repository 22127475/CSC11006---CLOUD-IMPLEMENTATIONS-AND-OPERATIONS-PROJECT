AWSTemplateFormatVersion: "2010-09-09"
Description: Database layer template for Project 01 (RDS Aurora PostgreSQL, RDS Proxy, Secrets Manager, IAM role)

Resources:
  # EC2 to DB Security Group
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for EC2 to access DB
      VpcId:
        Fn::ImportValue: Project01-VPC-ID
      Tags:
        - Key: Name
          Value: Project01-EC2-DB

  # Aurora to EC2 Security Group
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for DB allowing traffic from EC2 SG
      VpcId:
        Fn::ImportValue: Project01-VPC-ID
      Tags:
        - Key: Name
          Value: Project01-DB-EC2

  # Subnet group for Aurora
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Aurora PostgreSQL
      SubnetIds:
        - Fn::ImportValue: Project01-Private-Subnet-1a
        - Fn::ImportValue: Project01-Private-Subnet-1b
      Tags:
        - Key: Name
          Value: Project01-DB-Subnet-Group

  # Secrets Manager for DB
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: Project01-DB-Secret
      Description: Credentials for RDS PostgreSQL and Proxy
      SecretString: !Sub |
        {
          "username": "prj01",
          "password": "From1to10"
        }
      Tags:
        - Key: Name
          Value: Project01-DB-Secret

  # RDS Aurora PostgreSQL Cluster(1 Instances + 1 Replica)
  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: project01-aurora-cluster
      Engine: aurora-postgresql
      MasterUsername:
        Fn::Sub: "{{resolve:secretsmanager:${DBSecret}:SecretString:username}}"
      MasterUserPassword:
        Fn::Sub: "{{resolve:secretsmanager:${DBSecret}:SecretString:password}}"
      DatabaseName: coffee
      DBSubnetGroupName: !Ref DBSubnetGroup
      Port: 5432
      VpcSecurityGroupIds:
        - !Ref DBSecurityGroup
      BackupRetentionPeriod: 7
      DeletionProtection: false
      Tags:
        - Key: Name
          Value: Project01-Aurora-Cluster

  AuroraInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: Project01-DB-Instance
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: Project01-Aurora-Instance
  AuroraReplica:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: Project01-DB-Replica
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: Project01-DB-Replica

  # RDS Proxy for Aurora
  # IAM role for RDS Proxy to access Secrets Manager
  RDSProxyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RDSProxySecretAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "secretsmanager:GetSecretValue"
                Resource: !Ref DBSecret

  # EC2 to RDS Proxy Security Group
  RDSProxySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allows inbound traffic from EC2 instances to the RDS Proxy"
      VpcId: !ImportValue Project01-VPC-ID
      Tags:
        - Key: Name
          Value: "Project01-RDS-Proxy-SG"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  # Ingress rule to allow RDS Proxy to connect to Aurora
  ProxyToAuroraIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBSecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref RDSProxySecurityGroup

  # RDS Proxy for Aurora PostgreSQL
  RDSProxy:
    Type: AWS::RDS::DBProxy
    DependsOn:
      - AuroraCluster
      - AuroraInstance
      - AuroraReplica
    Properties:
      DBProxyName: "Project01-Aurora-Proxy"
      EngineFamily: "POSTGRESQL"
      RoleArn: !GetAtt RDSProxyRole.Arn
      Auth:
        - AuthScheme: SECRETS
          IAMAuth: DISABLED
          SecretArn: !Ref DBSecret
      VpcSubnetIds:
        - !ImportValue Project01-Private-Subnet-1a
        - !ImportValue Project01-Private-Subnet-1b
      VpcSecurityGroupIds:
        - !Ref RDSProxySecurityGroup
      RequireTLS: true
      Tags:
        - Key: Name
          Value: "Project01-Aurora-Proxy"

  # RDS Proxy Target Group for Aurora
  ProxyDefaultTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    DependsOn:
      - AuroraCluster
      - AuroraInstance
      - AuroraReplica
    Properties:
      DBProxyName: !Ref RDSProxy
      TargetGroupName: "default"
      DBClusterIdentifiers:
        - !Ref AuroraCluster

Outputs:
  EC2SecurityGroupId:
    Description: SG to attach to EC2/ASG to allow DB access
    Value: !Ref EC2SecurityGroup
    Export:
      Name: Project01-EC2-DB-SG-ID
  DBSecurityGroupId:
    Description: SG for db allowing connections from EC2 SG
    Value: !Ref DBSecurityGroup
    Export:
      Name: Project01-DB-EC2-SG-ID
  DBSecretArn:
    Description: ARN of the DB secret
    Value: !Ref DBSecret
    Export:
      Name: Project01-DB-Secret-Arn
  DBSubnetGroupName:
    Description: Name of the DB subnet group
    Value: !Ref DBSubnetGroup
    Export:
      Name: Project01-DB-Subnet-Group-Name
  AuroraClusterId:
    Description: ID of the Aurora cluster
    Value: !Ref AuroraCluster
    Export:
      Name: Project01-Aurora-Cluster-Id
  AuroraClusterEndpoint:
    Description: Endpoint of the Aurora cluster
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: Project01-Aurora-Cluster-Endpoint
  AuroraReplicaId:
    Description: ID of the Aurora read replica
    Value: !Ref AuroraReplica
    Export:
      Name: Project01-Aurora-Replica-Id
  AuroraReplicaEndpoint:
    Description: Endpoint of the Aurora read replica
    Value: !GetAtt AuroraReplica.Endpoint.Address
    Export:
      Name: Project01-Aurora-Replica-Endpoint
  RDSProxyEndpoint:
    Description: "The connection endpoint for the RDS Proxy. USE THIS in your application."
    Value: !GetAtt RDSProxy.Endpoint
    Export:
      Name: "Project01-RDS-Proxy-Endpoint"
  RDSProxySecurityGroupId:
    Description: "The Security Group ID for the RDS Proxy."
    Value: !Ref RDSProxySecurityGroup
    Export:
      Name: "Project01-RDS-Proxy-SG-ID"
