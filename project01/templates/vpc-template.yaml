AWSTemplateFormatVersion: "2010-09-09"
Description: Create VPC

Resources:
  # VPC
  # Create a VPC with a CIDR block of, This VPC used to host Aurora DB, EC2 instances and ElastiCache Valkey Cluster
  Project01VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Project01-VPC

  # Subnets
  # Create two public subnets in different availability zones
  PublicSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project01VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Project01-Public-Subnet-1a

  PublicSubnet1B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project01VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Project01-Public-Subnet-1b

  # Create two private subnets in different availability zones
  PrivateSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project01VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Project01-Private-Subnet-1a

  PrivateSubnet1B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project01VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Project01-Private-Subnet-1b

  # Internet Gateway
  # Create an Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: project01-IGW

  # Attach the Internet Gateway to the VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Project01VPC
      InternetGatewayId: !Ref InternetGateway

  # Route Table
  # Create a route table for the public subnets
  # This route table will allow traffic to the Internet Gateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Project01VPC
      Tags:
        - Key: Name
          Value: Project01-Public-Subnet-RTB

  # Create a route in the public route table to allow traffic to the Internet Gateway
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associate the public subnets with the public route table
  PublicSubnet1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1A
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1BRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1B
      RouteTableId: !Ref PublicRouteTable

  # Security Groups
  # Base Security Group for EC2 instances
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH
      VpcId: !Ref Project01VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3001
          ToPort: 3001
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3002
          ToPort: 3002
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3003
          ToPort: 3003
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Project01-EC2-SG

  # Security Groups to connect EC2 instances to Aurora DB       
  # This Security Group is for EC2 instances, let the instances connect to Aurora DB
  EC2toAuroraDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for EC2 instances, let the instances connect to Aurora DB
      VpcId: !Ref Project01VPC
      Tags:
        - Key: Name
          Value: Project01-EC2toDB-EC2-SG
    
  # This Security Group is for Aurora DB, let the DB allow traffic from EC2 SG
  AuroraDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for Aurora DB, let the DB allow traffic from EC2 SG
      VpcId: !Ref Project01VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref EC2toAuroraDBSecurityGroup
      Tags:
        - Key: Name
          Value: Project01-DBtoEC2-DB-SG

  # Security Groups to connect EC2 instances to ElastiCache Valkey Cluster
  # This Security Group is for EC2 instances, let the instances connect to ElastiCache Valkey Cluster
  EC2toElastiCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for EC2 instances, let the instances connect to ElastiCache Valkey Cluster
      VpcId: !Ref Project01VPC
      Tags:
        - Key: Name
          Value: Project01-EC2toElastiCache-EC2-SG

  # This Security Group is for ElastiCache Valkey Cluster, let the cluster allow traffic from EC2 SG
  ElastiCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for ElastiCache Valkey Cluster, let the cluster allow traffic from EC2 SG
      VpcId: !Ref Project01VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId: !Ref EC2toElastiCacheSecurityGroup
      Tags:
        - Key: Name
          Value: Project01-CachetoEC2-Cache-SG

Outputs:
  # VPC Outputs
  VPCId:
    Value: !Ref Project01VPC
    Export:
      Name: Project01-VPC-ID
  PublicSubnet1AId:
    Value: !Ref PublicSubnet1A
    Export:
      Name: Project01-Public-Subnet-1a
  PublicSubnet1BId:
    Value: !Ref PublicSubnet1B
    Export:
      Name: Project01-Public-Subnet-1b
  PrivateSubnet1AId:
    Value: !Ref PrivateSubnet1A
    Export:
      Name: Project01-Private-Subnet-1a
  PrivateSubnet1BId:
    Value: !Ref PrivateSubnet1B
    Export:
      Name: Project01-Private-Subnet-1b

  # Security Groups Outputs
  InstanceSecurityGroupId:
    Value: !Ref InstanceSecurityGroup
    Export:
      Name: Project01-EC2-SG-ID
  # Security Groups to connect EC2 instances to Aurora DB Outputs
  EC2toAuroraDBSecurityGroupId:
    Value: !Ref EC2toAuroraDBSecurityGroup
    Export:
      Name: Project01-EC2toDB-EC2-SG-ID
  AuroraDBSecurityGroupId:
    Value: !Ref AuroraDBSecurityGroup
    Export:
      Name: Project01-DBtoEC2-DB-SG-ID
  # Security Groups to connect EC2 instances to ElastiCache Valkey Cluster Outputs
  EC2toElastiCacheSecurityGroupId:
    Value: !Ref EC2toElastiCacheSecurityGroup
    Export:
      Name: Project01-EC2toElastiCache-EC2-SG-ID
  ElastiCacheSecurityGroupId:
    Value: !Ref ElastiCacheSecurityGroup
    Export:
      Name: Project01-CachetoEC2-Cache-SG-ID

